import { Injectable, Logger } from '@nestjs/common';
import * as XLSX from 'xlsx';
import * as fs from 'fs';
import * as path from 'path';
import { GetProductsService } from './get-products.service';
import { Product } from 'src/types/product.type';

@Injectable()
export class ExportExcelProductsService {
  private readonly logger = new Logger(ExportExcelProductsService.name);

  constructor(private readonly productsDb: GetProductsService) {}

  async exportToExcelFromDb(filePath: string, provider: string): Promise<void> {
  const products: Product[] = await this.productsDb.getProducts(provider);

  if (products.length === 0) {
    this.logger.warn(`‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É: ${provider}`);
    return;
  }

  const ws = XLSX.utils.json_to_sheet(products);
  const wb = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(wb, ws, '–¢–æ–≤–∞—Ä—ã');

  fs.mkdirSync(path.dirname(filePath), { recursive: true });
  XLSX.writeFile(wb, filePath);

  this.logger.log(`üìÅ Excel-—Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${filePath}`);
}
}